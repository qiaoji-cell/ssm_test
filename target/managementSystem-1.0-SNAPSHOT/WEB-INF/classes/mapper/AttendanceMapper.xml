<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.axjy.mapper.dayRegister.AttendanceMapper">



  <select id="findAll" resultType="com.axjy.pojo.dayRegister.Attendance">
# select attendance.id,student.student_code,student.studentName,student.gender,chargetype.chargeType,parents.home_address,parents.relation_name,parents.phone,attendance.attendance_state,attendance.registrant,attendance.attendance_lock
# from kms_attendance as attendance
#        INNER JOIN kms_student as student on attendance.student_id = student.id
#        INNER JOIN kms_chargeType as chargetype on chargetype.id = student.chargeType
#        INNER JOIN kms_parents as parents on parents.student_id = student.id
# select attendance.id,student.student_code,student.studentName,student.gender,chargetype.chargeType,parents.home_address,parents.relation_name,parents.phone,attendance.attendance_state,attendance.registrant,attendance.attendance_lock,class.className
# from kms_attendance as attendance
#        INNER JOIN kms_student as student on attendance.student_id = student.id
#        INNER JOIN kms_chargeType as chargetype on chargetype.id = student.chargeType
#        INNER JOIN kms_parents as parents on parents.student_id = student.id
#        INNER JOIN kms_class as class on class.id = student.id
    select attendance.id,student.student_code,student.studentName,student.gender,chargetype.chargeType,parents.home_address,parents.relation_name,parents.phone,attendance.attendance_state,attendance.registrant,attendance.attendance_lock,class.className
    from kms_attendance as attendance
    INNER JOIN kms_student as student on attendance.student_id = student.id
    INNER JOIN kms_chargeType as chargetype on chargetype.id = student.chargeType
    INNER JOIN kms_parents as parents on parents.student_id = student.id
    INNER JOIN kms_class as class on class.id = student.id
    <where>
      <if test="className!=null and className!=''">
        and class.className = #{className}
      </if>
    </where>

  </select>























  <resultMap id="BaseResultMap" type="com.axjy.pojo.dayRegister.Attendance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="attendance_state" jdbcType="BIGINT" property="attendanceState" />
    <result column="registrant" jdbcType="VARCHAR" property="registrant" />
    <result column="attendance_lock" jdbcType="INTEGER" property="attendanceLock" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, attendance_state, registrant, attendance_lock
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kms_attendance
    where id = #{id,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kms_attendance
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.axjy.pojo.dayRegister.Attendance" useGeneratedKeys="true">
    insert into kms_attendance (student_id, attendance_state, registrant, 
      attendance_lock)
    values (#{studentId,jdbcType=INTEGER}, #{attendanceState,jdbcType=BIGINT}, #{registrant,jdbcType=VARCHAR}, 
      #{attendanceLock,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.axjy.pojo.dayRegister.Attendance" useGeneratedKeys="true">
    insert into kms_attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="attendanceState != null">
        attendance_state,
      </if>
      <if test="registrant != null">
        registrant,
      </if>
      <if test="attendanceLock != null">
        attendance_lock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="attendanceState != null">
        #{attendanceState,jdbcType=BIGINT},
      </if>
      <if test="registrant != null">
        #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="attendanceLock != null">
        #{attendanceLock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.axjy.pojo.dayRegister.Attendance">
    update kms_attendance
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="attendanceState != null">
        attendance_state = #{attendanceState,jdbcType=BIGINT},
      </if>
      <if test="registrant != null">
        registrant = #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="attendanceLock != null">
        attendance_lock = #{attendanceLock,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.axjy.pojo.dayRegister.Attendance">
    update kms_attendance
    set student_id = #{studentId,jdbcType=INTEGER},
      attendance_state = #{attendanceState,jdbcType=BIGINT},
      registrant = #{registrant,jdbcType=VARCHAR},
      attendance_lock = #{attendanceLock,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>








  <!--考勤状态已签-->
  <update id="updateState">
      update kms_attendance set attendance_state = 0 where id = #{id}
  </update>
  <!--考勤状态未签-->
  <update id="updateState2">
    update kms_attendance set attendance_state = 1 where id = #{id}
  </update>
  <!--考勤以锁定-->
  <update id="updateyisuo">
    update kms_attendance set attendance_lock =  0 where id = #{id}
  </update>
  <!--考勤未锁定-->
  <update id="updateweisuo">
    update kms_attendance set attendance_lock =  1 where id = #{id}
  </update>
<!--  考勤登记表中的请假-->
  <update id="upqj">
    update kms_attendance set attendance_state = #{attendanceState} where id = #{id}
</update>
  <!--按钮请假修改考勤状态-->
    <update id="ztqj">
      update kms_attendance set attendance_state = 0 where id = #{id}
    </update>
  <!--批量签到-->
  <update id="plqj">
    update kms_attendance set attendance_state = 0 where id in (
    <foreach collection="ids" item="ids" separator=",">
      #{ids}
    </foreach>
    )
  </update>

  <!--批量删除-->
  <delete id="del">
    delete from kms_attendance where id in (
    <foreach collection="ids" item="ids" separator=",">
      #{ids}
    </foreach>
    )
  </delete>

  <update id="uptj">
    update kms_attendance_record set leaver=leaver+1 where id = #{id}
  </update>
  <update id="uptj2">
    update kms_attendance_record set sickleave=sickleave+1 where id = #{id}
  </update>
  <update id="uptj3">
   update kms_attendance_record set  Occupiedbed= Occupiedbed+1 where id = #{id}
  </update>


</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.axjy.mapper.generalCharge.ChargeRecordMapper">

  <update id="updateState">
    update kms_charge_record set student_state = #{record.studentState} where id = #{record.id}
  </update>
  <select id="countByGrooveName" resultType="java.lang.Integer">
    select count(0) from kms_charge_record where student_charge_groove_name = #{grooveName}
  </select>
  <select id="countThisMonth" resultType="java.lang.Integer">
    select count(0) from kms_charge_record where student_fee_date = #{currentMonth};
  </select>

   <resultMap id="recordRm" type="ChargeRecord">
     <result column="studentId" property="studentId"></result>
     <result column="studentName" property="studentName"></result>
     <result column="studentCode" property="studentCode"></result>
     <result column="studentGender" property="studentGender"></result>
     <result column="studentGradeName" property="studentGardeName"></result>
     <result column="studentGradeId" property="studentGardeId"></result>
     <result column="studentClassName" property="studentClassName"></result>
     <result column="studentClassId" property="studentClassId"></result>
     <result column="studentChargeStartDate" property="studentChargeStartDate"></result>
     <result column="studentChargeEndDate" property="studentChargeEndDate"></result>
     <result column="studentChargeCategoryName" property="studentChargeCategoryName"></result>
     <result column="studentChargeGrooveName" property="studentChargeGrooveName"></result>
     <result column="studentChargeCostType" property="studentChargeCostType"></result>
     <result column="studentChargeUnivalenceType" property="studentChargeUnivalenceType"></result>
     <result column="studentChargeUnivalence" property="studentChargeUnivalence"></result>
     <result column="studentChargePayType" property="studentChargePayType"></result>
     <result column="studentChargeRefund" property="studentChargeRefund"></result>
     <result column="studentIsAlone" property="studentIsAlone"></result>
     <result column="studentEnterDate" property="studentEnterDate"></result>
     <result column="studentGardenId" property="studentGardenId"></result>
     <result column="studentFeeDate" property="studentFeeDate"></result>
     <result column="studentState" property="studentState"></result>
   </resultMap>
  <select id="generateRecord" resultMap="recordRm">
    select
    studentId,
    studentName,
    studentCode ,
    studentGender,
    studentGradeName,
    studentGradeId,
    studentClassName,
    studentClassId,
    studentChargeStartDate,
    studentChargeEndDate,
    studentChargeCategoryName,
    studentChargeGrooveName,
    studentChargeCostType,
    studentChargeUnivalenceType,
    studentChargeUnivalence,
    studentChargePayType,
    studentChargeRefund,
    studentIsAlone,
    studentEnterDate,
    studentGardenId,
    studentFeeDate,
    studentState
    from view_stu_record_charge record
    <where>
     <if test="stuId != null">
       and record.studentId = #{stuId}
     </if>
     <if test="gardenId != null">
       and record.studentGardenId = #{gardenId}
     </if>
    </where>

  </select>

  <select id="findAll" resultType="ChargeRecord">
    select * from kms_charge_record
    <where>
      <if test="vo.studentGardenId!=null">
        student_garden_id = #{vo.studentGardenId}
      </if>
      <if test="vo.studentChargeCostType!=null">
        and student_charge_cost_type = #{vo.studentChargeCostType}
      </if>
      <if test="vo.studentCode!=null and vo.studentCode!=''">
        and student_code = #{vo.studentCode}
      </if>
      <if test="vo.studentName!=null">
        and student_name like concat('%',#{vo.studentName},'%')
      </if>
      <if test="vo.studentState!=null and vo.studentState!=''">
        and student_state = #{vo.studentState}
      </if>
    </where>
  </select>

  <insert id="insertAll">
    insert into kms_charge_record(student_id,
    student_name,
    student_code,
    student_gender,
    student_garde_name,
    student_garde_id,
    student_class_name,
    student_class_id,
    student_charge_start_date,
    student_charge_end_date,
    student_charge_category_name,
    student_charge_groove_name,
    student_charge_cost_type,
    student_charge_univalence_type,
    student_charge_univalence,
    student_charge_pay_type,
    student_charge_refund,
    student_is_alone,
    student_enter_date,
    student_garden_id,
    student_fee_date,
    student_state) values
    <foreach collection="list" item="record" separator=",">
      (#{record.studentId},
       #{record.studentName},
       #{record.studentCode},
       #{record.studentGender},
       #{record.studentGardeName},
       #{record.studentGardeId},
       #{record.studentClassName},
       #{record.studentClassId},
       #{record.studentChargeStartDate},
       #{record.studentChargeEndDate},
       #{record.studentChargeCategoryName},
       #{record.studentChargeGrooveName},
       #{record.studentChargeCostType},
       #{record.studentChargeUnivalenceType},
       #{record.studentChargeUnivalence},
       #{record.studentChargePayType},
       #{record.studentChargeRefund},
       #{record.studentIsAlone},
       #{record.studentEnterDate},
       #{record.studentGardenId},
       #{record.studentFeeDate},
       #{record.studentState}
       )
    </foreach>
  </insert>


  <!--一月到十二月-->
  <!--1月到12月-->
  <select id="yiyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='01'
    </where>

  </select>
  <select id="eryue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='02'
    </where>

  </select>

  <select id="sanyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='03'
    </where>

  </select>
  <select id="siyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='04'
    </where>

  </select>
  <select id="wuyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='05'
    </where>

  </select>
  <select id="liuyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='06'
    </where>

  </select>
  <select id="qiyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='07'
    </where>

  </select>
  <select id="bayue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='08'
    </where>

  </select>
  <select id="jiuyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='09'
    </where>

  </select>
  <select id="shiyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='10'
    </where>

  </select>
  <select id="shiyiyue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='11'
    </where>

  </select>
  <select id="shieryue" resultType="java.lang.Double">
    select sum(student_charge_univalence) from kms_charge_record
    <where>
      <if test="gardenId!=null">
        student_garden_id =#{gardenId}
      </if>
      and YEAR(student_fee_date)='2021'
      and MONTH(student_fee_date)='12'
    </where>

  </select>














  <resultMap id="BaseResultMap" type="com.axjy.pojo.generalCharge.ChargeRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_code" jdbcType="VARCHAR" property="studentCode" />
    <result column="student_gender" jdbcType="INTEGER" property="studentGender" />
    <result column="student_garde_name" jdbcType="VARCHAR" property="studentGardeName" />
    <result column="student_garde_id" jdbcType="BIGINT" property="studentGardeId" />
    <result column="student_class_name" jdbcType="VARCHAR" property="studentClassName" />
    <result column="student_class_id" jdbcType="BIGINT" property="studentClassId" />
    <result column="student_charge_start_date" jdbcType="TIMESTAMP" property="studentChargeStartDate" />
    <result column="student_charge_end_date" jdbcType="TIMESTAMP" property="studentChargeEndDate" />
    <result column="student_charge_category_name" jdbcType="VARCHAR" property="studentChargeCategoryName" />
    <result column="student_charge_groove_name" jdbcType="VARCHAR" property="studentChargeGrooveName" />
    <result column="student_charge_cost_type" jdbcType="INTEGER" property="studentChargeCostType" />
    <result column="student_charge_univalence_type" jdbcType="INTEGER" property="studentChargeUnivalenceType" />
    <result column="student_charge_univalence" jdbcType="DOUBLE" property="studentChargeUnivalence" />
    <result column="student_charge_pay_type" jdbcType="INTEGER" property="studentChargePayType" />
    <result column="student_charge_refund" jdbcType="DOUBLE" property="studentChargeRefund" />
    <result column="student_is_alone" jdbcType="INTEGER" property="studentIsAlone" />
    <result column="student_enter_date" jdbcType="TIMESTAMP" property="studentEnterDate" />
    <result column="student_garden_id" jdbcType="INTEGER" property="studentGardenId" />
    <result column="student_fee_date" jdbcType="TIMESTAMP" property="studentFeeDate" />
    <result column="student_state" jdbcType="INTEGER" property="studentState" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, student_name, student_code, student_gender, student_garde_name, student_garde_id, 
    student_class_name, student_class_id, student_charge_start_date, student_charge_end_date, 
    student_charge_category_name, student_charge_groove_name, student_charge_cost_type, 
    student_charge_univalence_type, student_charge_univalence, student_charge_pay_type, 
    student_charge_refund, student_is_alone, student_enter_date, student_garden_id, student_fee_date, 
    student_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kms_charge_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kms_charge_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.axjy.pojo.generalCharge.ChargeRecord" useGeneratedKeys="true">
    insert into kms_charge_record (student_id, student_name, student_code, 
      student_gender, student_garde_name, student_garde_id, 
      student_class_name, student_class_id, student_charge_start_date, 
      student_charge_end_date, student_charge_category_name, 
      student_charge_groove_name, student_charge_cost_type, 
      student_charge_univalence_type, student_charge_univalence, 
      student_charge_pay_type, student_charge_refund, 
      student_is_alone, student_enter_date, student_garden_id, 
      student_fee_date, student_state)
    values (#{studentId,jdbcType=BIGINT}, #{studentName,jdbcType=VARCHAR}, #{studentCode,jdbcType=VARCHAR}, 
      #{studentGender,jdbcType=INTEGER}, #{studentGardeName,jdbcType=VARCHAR}, #{studentGardeId,jdbcType=BIGINT}, 
      #{studentClassName,jdbcType=VARCHAR}, #{studentClassId,jdbcType=BIGINT}, #{studentChargeStartDate,jdbcType=TIMESTAMP}, 
      #{studentChargeEndDate,jdbcType=TIMESTAMP}, #{studentChargeCategoryName,jdbcType=VARCHAR}, 
      #{studentChargeGrooveName,jdbcType=VARCHAR}, #{studentChargeCostType,jdbcType=INTEGER}, 
      #{studentChargeUnivalenceType,jdbcType=INTEGER}, #{studentChargeUnivalence,jdbcType=DOUBLE}, 
      #{studentChargePayType,jdbcType=INTEGER}, #{studentChargeRefund,jdbcType=DOUBLE}, 
      #{studentIsAlone,jdbcType=INTEGER}, #{studentEnterDate,jdbcType=TIMESTAMP}, #{studentGardenId,jdbcType=INTEGER}, 
      #{studentFeeDate,jdbcType=TIMESTAMP}, #{studentState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.axjy.pojo.generalCharge.ChargeRecord" useGeneratedKeys="true">
    insert into kms_charge_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentCode != null">
        student_code,
      </if>
      <if test="studentGender != null">
        student_gender,
      </if>
      <if test="studentGardeName != null">
        student_garde_name,
      </if>
      <if test="studentGardeId != null">
        student_garde_id,
      </if>
      <if test="studentClassName != null">
        student_class_name,
      </if>
      <if test="studentClassId != null">
        student_class_id,
      </if>
      <if test="studentChargeStartDate != null">
        student_charge_start_date,
      </if>
      <if test="studentChargeEndDate != null">
        student_charge_end_date,
      </if>
      <if test="studentChargeCategoryName != null">
        student_charge_category_name,
      </if>
      <if test="studentChargeGrooveName != null">
        student_charge_groove_name,
      </if>
      <if test="studentChargeCostType != null">
        student_charge_cost_type,
      </if>
      <if test="studentChargeUnivalenceType != null">
        student_charge_univalence_type,
      </if>
      <if test="studentChargeUnivalence != null">
        student_charge_univalence,
      </if>
      <if test="studentChargePayType != null">
        student_charge_pay_type,
      </if>
      <if test="studentChargeRefund != null">
        student_charge_refund,
      </if>
      <if test="studentIsAlone != null">
        student_is_alone,
      </if>
      <if test="studentEnterDate != null">
        student_enter_date,
      </if>
      <if test="studentGardenId != null">
        student_garden_id,
      </if>
      <if test="studentFeeDate != null">
        student_fee_date,
      </if>
      <if test="studentState != null">
        student_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentCode != null">
        #{studentCode,jdbcType=VARCHAR},
      </if>
      <if test="studentGender != null">
        #{studentGender,jdbcType=INTEGER},
      </if>
      <if test="studentGardeName != null">
        #{studentGardeName,jdbcType=VARCHAR},
      </if>
      <if test="studentGardeId != null">
        #{studentGardeId,jdbcType=BIGINT},
      </if>
      <if test="studentClassName != null">
        #{studentClassName,jdbcType=VARCHAR},
      </if>
      <if test="studentClassId != null">
        #{studentClassId,jdbcType=BIGINT},
      </if>
      <if test="studentChargeStartDate != null">
        #{studentChargeStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentChargeEndDate != null">
        #{studentChargeEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentChargeCategoryName != null">
        #{studentChargeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="studentChargeGrooveName != null">
        #{studentChargeGrooveName,jdbcType=VARCHAR},
      </if>
      <if test="studentChargeCostType != null">
        #{studentChargeCostType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeUnivalenceType != null">
        #{studentChargeUnivalenceType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeUnivalence != null">
        #{studentChargeUnivalence,jdbcType=DOUBLE},
      </if>
      <if test="studentChargePayType != null">
        #{studentChargePayType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeRefund != null">
        #{studentChargeRefund,jdbcType=DOUBLE},
      </if>
      <if test="studentIsAlone != null">
        #{studentIsAlone,jdbcType=INTEGER},
      </if>
      <if test="studentEnterDate != null">
        #{studentEnterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentGardenId != null">
        #{studentGardenId,jdbcType=INTEGER},
      </if>
      <if test="studentFeeDate != null">
        #{studentFeeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentState != null">
        #{studentState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.axjy.pojo.generalCharge.ChargeRecord">
    update kms_charge_record
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentCode != null">
        student_code = #{studentCode,jdbcType=VARCHAR},
      </if>
      <if test="studentGender != null">
        student_gender = #{studentGender,jdbcType=INTEGER},
      </if>
      <if test="studentGardeName != null">
        student_garde_name = #{studentGardeName,jdbcType=VARCHAR},
      </if>
      <if test="studentGardeId != null">
        student_garde_id = #{studentGardeId,jdbcType=BIGINT},
      </if>
      <if test="studentClassName != null">
        student_class_name = #{studentClassName,jdbcType=VARCHAR},
      </if>
      <if test="studentClassId != null">
        student_class_id = #{studentClassId,jdbcType=BIGINT},
      </if>
      <if test="studentChargeStartDate != null">
        student_charge_start_date = #{studentChargeStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentChargeEndDate != null">
        student_charge_end_date = #{studentChargeEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentChargeCategoryName != null">
        student_charge_category_name = #{studentChargeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="studentChargeGrooveName != null">
        student_charge_groove_name = #{studentChargeGrooveName,jdbcType=VARCHAR},
      </if>
      <if test="studentChargeCostType != null">
        student_charge_cost_type = #{studentChargeCostType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeUnivalenceType != null">
        student_charge_univalence_type = #{studentChargeUnivalenceType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeUnivalence != null">
        student_charge_univalence = #{studentChargeUnivalence,jdbcType=DOUBLE},
      </if>
      <if test="studentChargePayType != null">
        student_charge_pay_type = #{studentChargePayType,jdbcType=INTEGER},
      </if>
      <if test="studentChargeRefund != null">
        student_charge_refund = #{studentChargeRefund,jdbcType=DOUBLE},
      </if>
      <if test="studentIsAlone != null">
        student_is_alone = #{studentIsAlone,jdbcType=INTEGER},
      </if>
      <if test="studentEnterDate != null">
        student_enter_date = #{studentEnterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentGardenId != null">
        student_garden_id = #{studentGardenId,jdbcType=INTEGER},
      </if>
      <if test="studentFeeDate != null">
        student_fee_date = #{studentFeeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentState != null">
        student_state = #{studentState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.axjy.pojo.generalCharge.ChargeRecord">
    update kms_charge_record
    set student_id = #{studentId,jdbcType=BIGINT},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_code = #{studentCode,jdbcType=VARCHAR},
      student_gender = #{studentGender,jdbcType=INTEGER},
      student_garde_name = #{studentGardeName,jdbcType=VARCHAR},
      student_garde_id = #{studentGardeId,jdbcType=BIGINT},
      student_class_name = #{studentClassName,jdbcType=VARCHAR},
      student_class_id = #{studentClassId,jdbcType=BIGINT},
      student_charge_start_date = #{studentChargeStartDate,jdbcType=TIMESTAMP},
      student_charge_end_date = #{studentChargeEndDate,jdbcType=TIMESTAMP},
      student_charge_category_name = #{studentChargeCategoryName,jdbcType=VARCHAR},
      student_charge_groove_name = #{studentChargeGrooveName,jdbcType=VARCHAR},
      student_charge_cost_type = #{studentChargeCostType,jdbcType=INTEGER},
      student_charge_univalence_type = #{studentChargeUnivalenceType,jdbcType=INTEGER},
      student_charge_univalence = #{studentChargeUnivalence,jdbcType=DOUBLE},
      student_charge_pay_type = #{studentChargePayType,jdbcType=INTEGER},
      student_charge_refund = #{studentChargeRefund,jdbcType=DOUBLE},
      student_is_alone = #{studentIsAlone,jdbcType=INTEGER},
      student_enter_date = #{studentEnterDate,jdbcType=TIMESTAMP},
      student_garden_id = #{studentGardenId,jdbcType=INTEGER},
      student_fee_date = #{studentFeeDate,jdbcType=TIMESTAMP},
      student_state = #{studentState,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>